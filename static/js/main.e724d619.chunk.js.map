{"version":3,"sources":["Components/Form/Form.js","Components/Filter/Filter.js","Components/Container/Container.js","Components/ContactsList/ContactsListItem.js","Components/ContactsList/ContactsList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","reset","className","preventDefault","htmlFor","type","pattern","title","onChange","id","required","PropType","func","isRequired","Filter","this","props","Component","string","Container","children","ContactItem","onDeleteContact","onClick","prototype","ContactsList","contacts","map","findContact","PropTypes","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","newContact","find","contact","alert","prevContacts","normalizedFilter","toLowerCase","includes","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e724d619.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropType from \"prop-types\";\nimport shortid from \"shortid\";\nimport \"./Form.css\";\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <label className=\"Form__label\" htmlFor={nameInputId}>\n        Name{\" \"}\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={name}\n          onChange={handleChange}\n          id={nameInputId}\n          required\n        />\n      </label>\n      <br />\n      <label className=\"Form__label\" htmlFor={numberInputId}>\n        Number{\" \"}\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <br />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nForm.PropType = { onSubmit: PropType.func.isRequired };\n","import React, { Component } from 'react';\nimport PropType from 'prop-types';\nimport './Filter.css';\n\nclass Filter extends Component {\n  render() {\n    return (\n      <>\n        <h3 className=\"Filter__title\">Find contacts by name</h3>\n        <input\n          className=\"Filter__input\"\n          type=\"text\"\n          name=\"filter\"\n          value={this.props.value}\n          onChange={this.props.onChange}\n        />\n      </>\n    );\n  }\n}\n\nFilter.PropType = {\n  value: PropType.string,\n  onChange: PropType.func.isRequired,\n};\n\nexport default Filter;\n","import './Container.css';\n// import \"./App.css\";\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import PropType from 'prop-types';\nimport './ContactsList.css';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className=\"Contacts__item\">\n      {name}: {number}\n      <button\n        className=\"Contacts__btn\"\n        type=\"submit\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.prototype = {\n  id: PropType.number.isRequired,\n  name: PropType.string.isRequired,\n  number: PropType.number.isRequired,\n  onDeleteContact: PropType.func.isRequired,\n};\n\nexport default ContactItem;\n","import ContactItem from \"./ContactsListItem\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactsList.css\";\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className=\"ContactsList__item\">\n      {contacts().map(({ id, name, number }) => {\n        return (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactsList.prototype = {\n  findContact: PropTypes.func.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import { useState, useEffect } from \"react\";\nimport Form from \"./Components/Form\";\nimport Filter from \"./Components/Filter\";\nimport Container from \"./Components/Container\";\nimport ContactsList from \"./Components/ContactsList\";\nimport \"./App.css\";\nimport shortid from \"shortid\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [];\n  });\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (contacts.find((contact) => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    setContacts((prevContacts) => [newContact, ...prevContacts]);\n  };\n\n  const findContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  return (\n    <Container>\n      <h1 className=\"App__title\">Phonebook</h1>\n      <Form onSubmit={addContact} />\n      <div>\n        <h1 className=\"App__title\">Contacts</h1>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactsList contacts={findContact} onDeleteContact={deleteContact} />\n      </div>\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}